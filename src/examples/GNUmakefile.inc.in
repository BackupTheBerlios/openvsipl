######################################################### -*-Makefile-*-
#
# File:   GNUmakefile.inc.in
# Author: Mark Mitchell 
# Date:   2005-05-25
#
# Contents: Makefile fragment for examples.
#
########################################################################

########################################################################
# Variables
########################################################################

examples_CXXINCLUDES := -I$(srcdir)/src
examples_CXXFLAGS := $(examples_CXXINCLUDES)

# The examples subdirectory contains both C++ as well as C sources.
# On a separate axis, it contains sources belonging to SV++, as well
# as sources belonging to SV.  Therefore we use four variables to track
# them.

examples_sv_subdirs  := cvsip
examples_svxx_subdirs:= ustorage dda eval profile

ifdef VSIP_IMPL_HAVE_CBE_SDK
# ukernel examples are complex enough to build to
# warrant their own makefile
include examples/ukernel/GNUmakefile.inc
endif

# Construct the list of all SV++ example sources.
examples_svxx_sources := $(wildcard $(srcdir)/examples/*.cpp)
examples_svxx_sources += $(wildcard $(srcdir)/examples/*.hpp)
examples_svxx_sources += $(foreach dir,$(examples_svxx_subdirs),\
                           $(wildcard $(srcdir)/examples/$(dir)/*.cpp))
examples_svxx_sources += $(foreach dir,$(examples_svxx_subdirs),\
                           $(wildcard $(srcdir)/examples/$(dir)/*.hpp))
ifndef VSIP_CSL_HAVE_PNG
examples_svxx_sources := $(filter-out %png.cpp %sobel.cpp %stencil.cpp, \
                           $(examples_svxx_sources))
endif
ifdef VSIP_IMPL_REF_IMPL
examples_svxx_sources := $(filter-out %extdata.cpp, $(examples_svxx_sources))
examples_svxx_sources := $(filter-out %mprod.cpp, $(examples_svxx_sources))
endif

# Construct the list of all SV example sources.
examples_sv_sources := $(foreach dir,$(examples_sv_subdirs),\
                          $(wildcard $(srcdir)/examples/$(dir)/*.c))
examples_sv_sources += $(foreach dir,$(examples_sv_subdirs),\
                          $(wildcard $(srcdir)/examples/$(dir)/*.h))
examples_sv_sources += $(foreach dir,$(examples_sv_subdirs),\
                          $(wildcard $(srcdir)/examples/$(dir)/*.cpp))
examples_sv_sources += $(foreach dir,$(examples_sv_subdirs),\
                          $(wildcard $(srcdir)/examples/$(dir)/*.hpp))

# Construct the list of all C++ example sources.
examples_cxx_sources := $(filter %.cpp, $(examples_svxx_sources))
examples_cxx_sources += $(filter %.cpp, $(examples_sv_sources))

# Construct the list of all C example sources.
examples_c_sources := $(filter %.c, $(examples_svxx_sources))
examples_c_sources += $(filter %.c, $(examples_sv_sources))


examples_cxx_objects := \
	$(patsubst $(srcdir)/%.cpp, %.$(OBJEXT), $(examples_cxx_sources))
cxx_sources += $(examples_cxx_sources)

examples_cxx_exes := \
	$(patsubst $(srcdir)/%.cpp, %$(EXEEXT), $(examples_cxx_sources))

examples_c_objects := \
	$(patsubst $(srcdir)/%.c, %.$(OBJEXT), $(examples_c_sources))
c_sources += $(examples_c_sources)

examples_c_exes := \
	$(patsubst $(srcdir)/%.c, %$(EXEEXT), $(examples_c_sources))



examples_vcproj_files := \
	examples/vcproj/SourceryVSIPL++-examples.sln \
	examples/vcproj/fft/fft.vcproj \
	examples/vcproj/fft/fft.icproj \
	examples/vcproj/vmul/vmul.vcproj \
	examples/vcproj/vmul/vmul.icproj

define generate_vcproj
cat $< | sed -b -e "s|@prefix_@|$(prefix)|" \
           -e "s|@CPPFLAGS_@|@CPPFLAGS@|" \
           -e "s|@LDFLAGS_@|$(patsubst -l%,lib%.lib, $(subst -L,/libpath:, $(LDFLAGS)))|" \
           -e "s|@LIBS_@|$(patsubst -l%,lib%.lib, $(subst -L,/libpath:, $(LIBS)))|" \
          > $@
endef

vpath %.pre $(srcdir)

########################################################################
# Rules
########################################################################

examples/png: override LIBS += -lpng
examples/sobel: override LIBS += -lpng
examples/stencil: override LIBS += -lpng

examples:: $(examples_cxx_exes) $(examples_c_exes)

# Object files will be deleted by the parent clean rule.
clean::
	rm -f $(examples_cxx_exes) $(examples_c_exes)

$(examples_vcproj_files): %: %.pre
	mkdir -p `dirname $@`
	$(generate_vcproj)

ifdef INTEL_WIN
install:: $(examples_vcproj_files)
endif

install-core::
	$(INSTALL) -d $(DESTDIR)$(pkgdatadir)
	$(INSTALL_DATA) examples/common.mk $(DESTDIR)$(pkgdatadir)/common.mk

install-svxx::
	for src in $(patsubst $(srcdir)/examples/%, %, $(examples_svxx_sources)); do \
          $(INSTALL) -d $(DESTDIR)$(pkgdatadir)/`dirname $$src`; \
          $(INSTALL_DATA) $(srcdir)/examples/$$src $(DESTDIR)$(pkgdatadir)/`dirname $$src`; \
        done
	$(INSTALL_DATA) examples/makefile.standalone \
          $(DESTDIR)$(pkgdatadir)/Makefile
	for dir in $(examples_svxx_subdirs); do \
          $(INSTALL) -d $(DESTDIR)$(pkgdatadir)/$$dir ; \
          $(INSTALL_DATA) examples/$$dir/makefile.standalone \
            $(DESTDIR)$(pkgdatadir)/$$dir/Makefile ; \
        done
ifdef INTEL_WIN
	$(INSTALL) -d $(DESTDIR)$(pkgdatadir)/vcproj
	$(INSTALL) -d $(DESTDIR)$(pkgdatadir)/vcproj/fft
	$(INSTALL) -d $(DESTDIR)$(pkgdatadir)/vcproj/vmul
	for file in $(patsubst examples/%, %, $(examples_vcproj_files)); do \
          $(INSTALL_DATA) examples/$$file \
            $(DESTDIR)$(pkgdatadir)/`dirname $$file`; \

	done
endif

install-sv::
	for src in $(patsubst $(srcdir)/examples/%, %, $(examples_sv_sources)); do \
          $(INSTALL) -d $(DESTDIR)$(pkgdatadir)/`dirname $$src`; \
          $(INSTALL_DATA) $(srcdir)/examples/$$src $(DESTDIR)$(pkgdatadir)/`dirname $$src`; \
        done
	for dir in $(examples_sv_subdirs); do \
          $(INSTALL) -d $(DESTDIR)$(pkgdatadir)/$$dir ; \
          $(INSTALL_DATA) examples/$$dir/makefile.standalone \
            $(DESTDIR)$(pkgdatadir)/$$dir/Makefile ; \
        done



$(examples_cxx_exes): %$(EXEEXT): %.$(OBJEXT) | $(libs)
	$(link_csl_app)

$(examples_c_exes): %$(EXEEXT): %.$(OBJEXT) | $(libs)
	$(link_cvsip_app)
